#!/usr/bin/env python3
"""
LineFollower.py
---------------
Ce module g√®re le capteur de suivi de ligne (capteur infrarouge).
Il d√©tecte la pr√©sence d'une ligne noire et d√©clenche l'arr√™t de la voiture autonome si n√©cessaire.

Auteur : Vergeylen Anthony
Date   : 09-04-2025 (modifi√© le 11-04-2025)
"""

from gpiozero import DigitalInputDevice
from time import sleep
import threading

class LineFollower:
    """
    Classe de gestion du capteur de suivi de ligne.

    QUI : Vergeylen Anthony
    QUOI : D√©tecte une ligne noire. √Ä la premi√®re d√©tection : pause 5s. √Ä la seconde : arr√™t de la voiture.
    QUAND : 09-04-2025
    """
    def __init__(self, gpio_pin=20):
        self.sensor = DigitalInputDevice(gpio_pin)
        self.monitoring = True
        self.first_triggered = False

    def monitor(self, car_launcher):
        """
        Lance la surveillance continue du capteur de ligne.
        - 1√®re d√©tection : pause de 5 secondes (voiture continue).
        - 2√®me d√©tection : arr√™t imm√©diat via car_launcher.
        """
        print("üö¶ Surveillance de ligne activ√©e...")
        # while self.monitoring:
        #     if not self.sensor.is_active:
        #         if not self.first_triggered:
        #             print("‚ö†Ô∏è Premi√®re ligne noire d√©tect√©e. Pause de s√©curit√©...")
        #             self.first_triggered = True
        #             sleep(10)  # Pause sans d√©sactiver la voiture
        #             print("‚úÖ Reprise de la surveillance de ligne.")
        #         else:
        #             print("‚¨õ Ligne noire d√©tect√©e √† nouveau ! Arr√™t imm√©diat de la voiture.")
        #             car_launcher.shutdown()
        #             self.monitoring = False
        #     sleep(0.2)

    def stop_monitoring(self):
        self.monitoring = False
